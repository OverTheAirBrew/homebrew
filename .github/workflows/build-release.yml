name: Build And Release

on: [ push ]

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: overtheairbrew/build:node-14
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          MYSQL_DATABASE: test_database
  

    steps:
      - uses: actions/checkout@v3
      - run: |
          npm ci
          npm run bootstrap
      - run: npm run build
      - run: npm run migrate
      - run: npm run test
        env:
          DB_URL: mysql://root@127.0.0.1/test_database
      - run: npm run e2e
        env:
          DB_URL: mysql://root@127.0.0.1/test_database
          NODE_ENV: testing
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true # optional (default = false)
          files: ./apps/homebrew/coverage/coverage-final.json,./apps/homebrew/coverage-e2e/coverage-final.json
          flags: homebrew
          name: homebrew
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true # optional (default = false)
          files: ./packages/locking/coverage/coverage-final.json
          flags: locking
          name: locking
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPENDABOT_AUTOMERGE_TOKEN }}
          DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - run: npm run push-locales
        env: 
          HB_CROWDIN_API_KEY: ${{ secrets.CROWDIN_API_KEY }}
